<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Yii on Илья Маринин</title>
    <link>https://www.marinin.pw/ru/tags/yii/</link>
    <description>Recent content in Yii on Илья Маринин</description>
    <generator>Hugo -- 0.125.6</generator>
    <language>ru-RU</language>
    <lastBuildDate>Sun, 07 Jan 2018 15:40:09 +0500</lastBuildDate>
    <atom:link href="https://www.marinin.pw/ru/tags/yii/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Реализация RESTful API в Yii2</title>
      <link>https://www.marinin.pw/ru/posts/yii2-rest/</link>
      <pubDate>Sun, 07 Jan 2018 15:40:09 +0500</pubDate>
      <guid>https://www.marinin.pw/ru/posts/yii2-rest/</guid>
      <description>Yii2 из коробки предоставляет удобный фреймворк для построения REST API вашего сервиса. Ниже я опишу как быстро начать его использовать.
Предварительная настройка Для начала работы достаточно базового шаблона Yii2. Создание проекта и настройку виртуального хоста я описывать не буду и перейду сразу к настройке REST.
После скачивания проекта настроим компоненту user в файле web.php. Добавим туда следующие строки:
&amp;#39;enableSession&amp;#39; =&amp;gt; false, &amp;#39;loginUrl&amp;#39; =&amp;gt; null, Первая строка отключает сохранение состояния пользователя на сервере: одно из требований архитектуры REST.</description>
    </item>
    <item>
      <title>Неочевидные моменты при работе с assets в Yii2</title>
      <link>https://www.marinin.pw/ru/posts/yii2-assets/</link>
      <pubDate>Fri, 24 Feb 2017 15:29:39 +0500</pubDate>
      <guid>https://www.marinin.pw/ru/posts/yii2-assets/</guid>
      <description>Недавно пришлось настраивать сжатие ассетов Yii2 на одном из проектов. Для этого во фреймворке предусмотрен удобный cli-интерфейс. Работа с ним вкратце описана в документации.
Ниже перечислен ряд моментов, которые для меня оказались не очевидны.
Advanced-шаблон и алиас @app В проекте я использую advanced-шаблон. Он позволяет разделять проект на три части:
Для пользователя (frontend) Для администраторов и контент-менеджеров (backend) Для работы с cli-интерфейсом приложения (console) Для каждой из частей проекта так же предусмотрены алиасы @frontend, @backend и @console соответственно.</description>
    </item>
  </channel>
</rss>
